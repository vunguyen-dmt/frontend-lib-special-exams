{"version":3,"file":"ExamTimerBlock.js","names":["ExamTimerBlock","injectIntl","attempt","stopExamAttempt","expireExamAttempt","pollExamAttempt","intl","pingAttempt","submitExam","useToggle","isShowMore","showMore","showLess","useState","alertVariant","setAlertVariant","timeReachedNull","setTimeReachedNull","IS_STARTED_STATUS","attempt_status","onLowTime","onCriticalLowTime","onTimeReachedNull","handleEndExamClick","useEffect","Emitter","once","TIMER_IS_LOW","TIMER_IS_CRITICALLY_LOW","TIMER_LIMIT_REACHED","TIMER_REACHED_NULL","off","examLink","exam_url_path","exam_display_name","examType","exam_type","formatMessage","id","defaultMessage","ExamStatus","READY_TO_SUBMIT","propTypes","PropTypes","shape","string","isRequired","time_remaining_seconds","number","func"],"sources":["../../src/timer/ExamTimerBlock.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage, injectIntl } from '@edx/frontend-platform/i18n';\nimport { Button, Alert, useToggle } from '@edx/paragon';\nimport CountDownTimer from './CountDownTimer';\nimport { ExamStatus, IS_STARTED_STATUS } from '../constants';\nimport TimerProvider from './TimerProvider';\nimport { Emitter } from '../data';\nimport {\n  TIMER_IS_CRITICALLY_LOW,\n  TIMER_IS_LOW,\n  TIMER_LIMIT_REACHED,\n  TIMER_REACHED_NULL,\n} from './events';\n\n/**\n * Exam timer block component.\n */\nconst ExamTimerBlock = injectIntl(({\n  attempt, stopExamAttempt, expireExamAttempt, pollExamAttempt,\n  intl, pingAttempt, submitExam,\n}) => {\n  const [isShowMore, showMore, showLess] = useToggle(false);\n  const [alertVariant, setAlertVariant] = useState('info');\n  const [timeReachedNull, setTimeReachedNull] = useState(false);\n\n  if (!attempt || !IS_STARTED_STATUS(attempt.attempt_status)) {\n    return null;\n  }\n\n  const onLowTime = () => setAlertVariant('warning');\n  const onCriticalLowTime = () => setAlertVariant('danger');\n  const onTimeReachedNull = () => setTimeReachedNull(true);\n\n  const handleEndExamClick = () => {\n    // if timer reached 00:00 submit exam right away\n    // instead of trying to move user to ready_to_submit page\n    if (timeReachedNull) {\n      submitExam();\n    } else {\n      stopExamAttempt();\n    }\n  };\n\n  useEffect(() => {\n    Emitter.once(TIMER_IS_LOW, onLowTime);\n    Emitter.once(TIMER_IS_CRITICALLY_LOW, onCriticalLowTime);\n    Emitter.once(TIMER_LIMIT_REACHED, expireExamAttempt);\n    Emitter.once(TIMER_REACHED_NULL, onTimeReachedNull);\n\n    return () => {\n      Emitter.off(TIMER_IS_LOW, onLowTime);\n      Emitter.off(TIMER_IS_CRITICALLY_LOW, onCriticalLowTime);\n      Emitter.off(TIMER_LIMIT_REACHED, expireExamAttempt);\n      Emitter.off(TIMER_REACHED_NULL, onTimeReachedNull);\n    };\n  }, []);\n\n  return (\n    <TimerProvider attempt={attempt} pollHandler={pollExamAttempt} pingHandler={pingAttempt}>\n      <Alert variant={alertVariant}>\n        <div\n          className=\"d-flex justify-content-between flex-column flex-lg-row align-items-start\"\n          data-testid=\"exam-timer\"\n        >\n          <div>\n            <FormattedMessage\n              id=\"exam.examTimer.text1\"\n              defaultMessage='You are taking \"{examLink}\" as {examType}.'\n              values={{\n                examLink: (\n                  <Alert.Link href={attempt.exam_url_path}>\n                    {attempt.exam_display_name}\n                  </Alert.Link>\n                ),\n                examType: attempt.exam_type === 'a timed exam' ? 'một bài kiểm tra có giới hạn thời gian' : attempt.exam_type,\n              }}\n            />\n            {' '}\n            {\n              isShowMore\n                ? (\n                  <span>\n                    <FormattedMessage\n                      id=\"exam.examTimer.showLess\"\n                      defaultMessage={'The timer on the right shows the time remaining in the exam. '\n                        + 'To receive credit for problems, you must select \"Submit\" '\n                        + 'for each problem before you select \"End My Exam\" '}\n                    />\n                    <Alert.Link onClick={showLess}>\n                      <FormattedMessage\n                        id=\"exam.examTimer.showLessLink\"\n                        defaultMessage=\"Show less\"\n                      />\n                    </Alert.Link>\n                  </span>\n                )\n                : (\n                  <Alert.Link onClick={showMore}>\n                    <FormattedMessage\n                      id=\"exam.examTimer.showMoreLink\"\n                      defaultMessage=\"Show more\"\n                    />\n                  </Alert.Link>\n                )\n            }\n          </div>\n          <div\n            className=\"d-flex align-items-center flex-shrink-0 ml-lg-3 mt-2 mt-lg-0\"\n            aria-label={intl.formatMessage({\n              id: 'exam.aria.examTimerAndEndExamButton',\n              defaultMessage: 'Exam timer and end exam button',\n            })}\n          >\n\n            {attempt.attempt_status !== ExamStatus.READY_TO_SUBMIT && (\n              <Button data-testid=\"end-button\" className=\"mr-3\" variant=\"outline-primary\" onClick={handleEndExamClick}>\n                <FormattedMessage\n                  id=\"exam.examTimer.endExamBtn\"\n                  defaultMessage=\"End My Exam\"\n                />\n              </Button>\n            )}\n\n            <CountDownTimer attempt={attempt} />\n\n          </div>\n        </div>\n      </Alert>\n    </TimerProvider>\n  );\n});\n\nExamTimerBlock.propTypes = {\n  attempt: PropTypes.shape({\n    exam_url_path: PropTypes.string.isRequired,\n    exam_display_name: PropTypes.string.isRequired,\n    time_remaining_seconds: PropTypes.number.isRequired,\n  }),\n  stopExamAttempt: PropTypes.func.isRequired,\n  expireExamAttempt: PropTypes.func.isRequired,\n  submitExam: PropTypes.func.isRequired,\n};\n\nexport default ExamTimerBlock;\n"],"mappings":"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"}