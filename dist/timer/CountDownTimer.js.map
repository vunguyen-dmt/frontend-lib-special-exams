{"version":3,"file":"CountDownTimer.js","names":["CountDownTimer","injectIntl","props","timer","useContext","TimerContext","timeString","getTimeString","useToggle","isShowTimer","showTimer","hideTimer","intl","timeRemainingSeconds","attempt","time_remaining_seconds","generateAccessbilityString","humanizedTime","generateHumanizedTime","minWidth","formatMessage","id","defaultMessage","VisibilityOff","Visibility"],"sources":["../../src/timer/CountDownTimer.jsx"],"sourcesContent":["import React, { useContext } from 'react';\nimport { Icon, useToggle } from '@edx/paragon';\nimport { Visibility, VisibilityOff } from '@edx/paragon/icons';\nimport { injectIntl } from '@edx/frontend-platform/i18n';\nimport { TimerContext } from './TimerProvider';\nimport { generateHumanizedTime } from '../helpers';\n\n/**\n * Display timer textual value. Display hide/show button.\n */\nconst CountDownTimer = injectIntl((props) => {\n  const timer = useContext(TimerContext);\n  const timeString = timer.getTimeString();\n  const [isShowTimer, showTimer, hideTimer] = useToggle(true);\n  const { intl } = props;\n  const { time_remaining_seconds: timeRemainingSeconds } = props.attempt;\n\n  const generateAccessbilityString = () => {\n    const humanizedTime = generateHumanizedTime(timeRemainingSeconds);\n    /**\n    * INTL NOTE: At the moment, these strings are NOT internationalized/translated.\n    * The back-end also does not support this either.\n    *\n    * It is TBD if this needs to be implemented\n    */\n    return `you have ${humanizedTime} remaining`;\n  };\n\n  return (\n    <div\n      className=\"exam-timer-clock d-flex justify-content-between\"\n      style={{ minWidth: isShowTimer ? '110px' : '32px' }}\n    >\n      <span className=\"sr-only timer-announce\" aria-live=\"assertive\">{generateAccessbilityString()}</span>\n      {isShowTimer && timeString}\n      <span\n        className=\"pl-2 d-flex flex-column justify-content-center\"\n        id=\"toggle_timer\"\n        aria-pressed={isShowTimer ? 'false' : 'true'}\n        aria-label={isShowTimer\n          ? intl.formatMessage({\n            id: 'exam.aria.hideTimer',\n            defaultMessage: 'Hide Timer',\n          })\n          : intl.formatMessage({\n            id: 'exam.aria.showTimer',\n            defaultMessage: 'Show Timer',\n          })}\n      >\n        {isShowTimer\n          ? <Icon data-testid=\"hide-timer\" src={VisibilityOff} onClick={hideTimer} />\n          : <Icon data-testid=\"show-timer\" src={Visibility} onClick={showTimer} />}\n      </span>\n    </div>\n  );\n});\n\nexport default CountDownTimer;\n"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAAmD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEnD;AACA;AACA;AACA,IAAMA,cAAc,GAAG,IAAAC,gBAAU,EAAC,UAACC,KAAK,EAAK;EAC3C,IAAMC,KAAK,GAAG,IAAAC,iBAAU,EAACC,2BAAY,CAAC;EACtC,IAAMC,UAAU,GAAGH,KAAK,CAACI,aAAa,EAAE;EACxC,iBAA4C,IAAAC,kBAAS,EAAC,IAAI,CAAC;IAAA;IAApDC,WAAW;IAAEC,SAAS;IAAEC,SAAS;EACxC,IAAQC,IAAI,GAAKV,KAAK,CAAdU,IAAI;EACZ,IAAgCC,oBAAoB,GAAKX,KAAK,CAACY,OAAO,CAA9DC,sBAAsB;EAE9B,IAAMC,0BAA0B,GAAG,SAA7BA,0BAA0B,GAAS;IACvC,IAAMC,aAAa,GAAG,IAAAC,8BAAqB,EAACL,oBAAoB,CAAC;IACjE;AACJ;AACA;AACA;AACA;AACA;IACI,0BAAmBI,aAAa;EAClC,CAAC;EAED,oBACE;IACE,SAAS,EAAC,iDAAiD;IAC3D,KAAK,EAAE;MAAEE,QAAQ,EAAEV,WAAW,GAAG,OAAO,GAAG;IAAO;EAAE,gBAEpD;IAAM,SAAS,EAAC,wBAAwB;IAAC,aAAU;EAAW,GAAEO,0BAA0B,EAAE,CAAQ,EACnGP,WAAW,IAAIH,UAAU,eAC1B;IACE,SAAS,EAAC,gDAAgD;IAC1D,EAAE,EAAC,cAAc;IACjB,gBAAcG,WAAW,GAAG,OAAO,GAAG,MAAO;IAC7C,cAAYA,WAAW,GACnBG,IAAI,CAACQ,aAAa,CAAC;MACnBC,EAAE,EAAE,qBAAqB;MACzBC,cAAc,EAAE;IAClB,CAAC,CAAC,GACAV,IAAI,CAACQ,aAAa,CAAC;MACnBC,EAAE,EAAE,qBAAqB;MACzBC,cAAc,EAAE;IAClB,CAAC;EAAE,GAEJb,WAAW,gBACR,gCAAC,aAAI;IAAC,eAAY,YAAY;IAAC,GAAG,EAAEc,oBAAc;IAAC,OAAO,EAAEZ;EAAU,EAAG,gBACzE,gCAAC,aAAI;IAAC,eAAY,YAAY;IAAC,GAAG,EAAEa,iBAAW;IAAC,OAAO,EAAEd;EAAU,EAAG,CACrE,CACH;AAEV,CAAC,CAAC;AAAC,eAEYV,cAAc;AAAA"}