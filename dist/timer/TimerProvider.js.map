{"version":3,"file":"TimerProvider.js","names":["GRACE_PERIOD_SECS","POLL_INTERVAL","TIME_LIMIT_CRITICAL_PCT","TIME_LIMIT_LOW_PCT","TimerContext","React","createContext","mapStateToProps","state","examState","activeAttempt","exam","attempt","timeLimitMins","time_limit_mins","getFormattedRemainingTime","timeLeft","hours","Math","floor","minutes","seconds","TimerServiceProvider","children","pollHandler","pingHandler","useState","timeState","setTimeState","useToggle","limitReached","setLimitReached","workerUrl","desktop_application_js_url","pingInterval","ping_interval","timeRemaining","time_remaining_seconds","LIMIT","CRITICAL_LOW_TIME","LOW_TIME","liveInterval","getTimeString","Object","values","map","item","value","join","pollExam","url","exam_started_poll_url","queryString","taking_as_proctored","processTimeLeft","timer","secondsLeft","Emitter","emit","TIMER_IS_CRITICALLY_LOW","TIMER_IS_LOW","TIMER_REACHED_NULL","clearInterval","TIMER_LIMIT_REACHED","useEffect","timerTick","setInterval","propTypes","PropTypes","shape","number","isRequired","string","bool","attempt_status","element","func","defaultProps","withExamStore"],"sources":["../../src/timer/TimerProvider.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useToggle } from '@edx/paragon';\nimport { Emitter } from '../data';\nimport {\n  TIMER_IS_CRITICALLY_LOW,\n  TIMER_IS_LOW,\n  TIMER_LIMIT_REACHED,\n  TIMER_REACHED_NULL,\n} from './events';\nimport { withExamStore } from '../hocs';\n\n/* give an extra 5 seconds where the timer holds at 00:00 before page refreshes */\nconst GRACE_PERIOD_SECS = 5;\nconst POLL_INTERVAL = 60;\nconst TIME_LIMIT_CRITICAL_PCT = 0.05;\nconst TIME_LIMIT_LOW_PCT = 0.2;\n\nexport const TimerContext = React.createContext({});\n\nconst mapStateToProps = (state) => {\n  const { activeAttempt, exam } = state.examState;\n  return { attempt: activeAttempt, timeLimitMins: exam.time_limit_mins };\n};\n\nconst getFormattedRemainingTime = (timeLeft) => ({\n  hours: Math.floor(timeLeft / (60 * 60)),\n  minutes: Math.floor((timeLeft / 60) % 60),\n  seconds: Math.floor(timeLeft % 60),\n});\n\nconst TimerServiceProvider = ({\n  children, attempt, timeLimitMins, pollHandler, pingHandler,\n}) => {\n  const [timeState, setTimeState] = useState({});\n  const [limitReached, setLimitReached] = useToggle(false);\n  const {\n    desktop_application_js_url: workerUrl,\n    ping_interval: pingInterval,\n    time_remaining_seconds: timeRemaining,\n  } = attempt;\n  const LIMIT = GRACE_PERIOD_SECS ? 0 - GRACE_PERIOD_SECS : 0;\n  const CRITICAL_LOW_TIME = timeLimitMins * 60 * TIME_LIMIT_CRITICAL_PCT;\n  const LOW_TIME = timeLimitMins * 60 * TIME_LIMIT_LOW_PCT;\n  let liveInterval = null;\n\n  const getTimeString = () => Object.values(timeState).map(\n    item => {\n      // Do not show timer negative value.\n      // User will see 00:00:00 during grace period if any.\n      const value = item < 0 ? 0 : item;\n      return (value < 10 ? `0${value}` : value);\n    },\n  ).join(':');\n\n  const pollExam = () => {\n    const url = attempt.exam_started_poll_url;\n    const queryString = `?sourceid=in_exam&proctored=${attempt.taking_as_proctored}`;\n    pollHandler(url + queryString);\n  };\n\n  const processTimeLeft = (timer, secondsLeft) => {\n    if (secondsLeft <= CRITICAL_LOW_TIME) {\n      Emitter.emit(TIMER_IS_CRITICALLY_LOW);\n    } else if (secondsLeft <= LOW_TIME) {\n      Emitter.emit(TIMER_IS_LOW);\n    }\n    // Used to hide continue exam button on submit exam pages.\n    // Since TIME_LIMIT_REACHED is fired after the grace period we\n    // need to emit separate event when timer reaches 00:00\n    if (secondsLeft <= 0) {\n      Emitter.emit(TIMER_REACHED_NULL);\n    }\n    if (!limitReached && secondsLeft < LIMIT) {\n      clearInterval(timer);\n      setLimitReached();\n      Emitter.emit(TIMER_LIMIT_REACHED);\n    }\n  };\n\n  useEffect(() => {\n    let timerTick = 0;\n    let secondsLeft = Math.floor(timeRemaining);\n    liveInterval = setInterval(() => {\n      secondsLeft -= 1;\n      timerTick += 1;\n      setTimeState(getFormattedRemainingTime(secondsLeft));\n      processTimeLeft(liveInterval, secondsLeft);\n      // no polling during grace period\n      if (timerTick % POLL_INTERVAL === 0 && secondsLeft >= 0) {\n        pollExam();\n      }\n      // if exam is proctored ping provider app\n      if (workerUrl && timerTick % pingInterval === pingInterval / 2) {\n        pingHandler(pingInterval, workerUrl);\n      }\n    }, 1000);\n    return () => {\n      if (liveInterval) {\n        clearInterval(liveInterval);\n        liveInterval = null;\n      }\n    };\n  }, [timeRemaining]);\n\n  return (\n    <TimerContext.Provider value={{\n      timeState,\n      getTimeString,\n    }}\n    >\n      {children}\n    </TimerContext.Provider>\n  );\n};\n\nTimerServiceProvider.propTypes = {\n  attempt: PropTypes.shape({\n    time_remaining_seconds: PropTypes.number.isRequired,\n    exam_started_poll_url: PropTypes.string,\n    desktop_application_js_url: PropTypes.string,\n    ping_interval: PropTypes.number,\n    taking_as_proctored: PropTypes.bool,\n    attempt_status: PropTypes.string.isRequired,\n  }).isRequired,\n  timeLimitMins: PropTypes.number.isRequired,\n  children: PropTypes.element.isRequired,\n  pollHandler: PropTypes.func,\n  pingHandler: PropTypes.func,\n};\n\nTimerServiceProvider.defaultProps = {\n  pollHandler: () => {},\n  pingHandler: () => {},\n};\n\nexport default withExamStore(TimerServiceProvider, mapStateToProps);\n"],"mappings":"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"}