{"version":3,"file":"OnboardingErrorExamInstructions.js","names":["OnboardingErrorProctoredExamInstructions","state","useContext","ExamStateContext","exam","proctoringSettings","attempt","onboardingLink","onboarding_link","integrationSpecificEmail","integration_specific_email","providerName","provider_name","renderBody","attempt_status","ExamStatus","ONBOARDING_MISSING","ONBOARDING_EXPIRED","ONBOARDING_PENDING","ONBOARDING_FAILED"],"sources":["../../../src/instructions/proctored_exam/OnboardingErrorExamInstructions.jsx"],"sourcesContent":["import React, { useContext } from 'react';\nimport { FormattedMessage } from '@edx/frontend-platform/i18n';\nimport { Container, MailtoLink, Hyperlink } from '@edx/paragon';\nimport ExamStateContext from '../../context';\nimport { ExamStatus } from '../../constants';\nimport Footer from './Footer';\n\nconst OnboardingErrorProctoredExamInstructions = () => {\n  const state = useContext(ExamStateContext);\n  const { exam, proctoringSettings } = state;\n  const { attempt, onboarding_link: onboardingLink } = exam;\n  const {\n    integration_specific_email: integrationSpecificEmail,\n    provider_name: providerName,\n  } = proctoringSettings;\n\n  const renderBody = () => {\n    switch (attempt.attempt_status) {\n      case ExamStatus.ONBOARDING_MISSING:\n      case ExamStatus.ONBOARDING_EXPIRED:\n        return (\n          <>\n            <p data-testid=\"onboarding_missing\">\n              <FormattedMessage\n                id=\"exam.OnboardingErrorProctoredExamInstructions.missingText\"\n                defaultMessage=\"Please complete an onboarding exam before attempting this exam.\"\n              />\n            </p>\n            {onboardingLink && (\n              <Hyperlink href={onboardingLink}>\n                <FormattedMessage\n                  id=\"exam.OnboardingErrorProctoredExamInstructions.onboardingButtonText\"\n                  defaultMessage=\"Navigate to onboarding exam\"\n                />\n              </Hyperlink>\n            )}\n          </>\n        );\n      case ExamStatus.ONBOARDING_PENDING:\n        return (\n          <p data-testid=\"onboarding_pending\">\n            <FormattedMessage\n              id=\"exam.OnboardingErrorProctoredExamInstructions.pendingText\"\n              defaultMessage={'Your onboarding exam is being reviewed. Before attempting this exam,'\n              + ' please allow 2+ business days for your onboarding exam to be reviewed.'}\n            />\n          </p>\n        );\n      case ExamStatus.ONBOARDING_FAILED:\n        return (\n          <>\n            <p data-testid=\"onboarding_failed\">\n              <FormattedMessage\n                id=\"exam.OnboardingErrorProctoredExamInstructions.failedText\"\n                defaultMessage=\"Your onboarding exam failed to pass all requirements.\"\n              />\n            </p>\n            {onboardingLink && (\n              <Hyperlink href={onboardingLink}>\n                <FormattedMessage\n                  id=\"exam.OnboardingErrorProctoredExamInstructions.onboardingButtonText\"\n                  defaultMessage=\"Navigate to onboarding exam\"\n                />\n              </Hyperlink>\n            )}\n          </>\n        );\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <div>\n      <Container className=\"border py-5 mb-4\">\n        <div className=\"h3\">\n          <FormattedMessage\n            id=\"exam.OnboardingErrorProctoredExamInstructions.title\"\n            defaultMessage=\"You must complete an onboarding exam before taking this proctored exam\"\n          />\n        </div>\n        {renderBody()}\n        {integrationSpecificEmail && (\n          <p className=\"pt-2\">\n            <FormattedMessage\n              id=\"exam.OnboardingErrorProctoredExamInstructions.providerInfo\"\n              defaultMessage={'Proctoring for your exam is provided via {providerName}. '\n              + 'If you have questions about the status of your onboarding exam, contact '}\n              values={{ providerName }}\n            />\n            <MailtoLink to={integrationSpecificEmail}>\n              {integrationSpecificEmail}\n            </MailtoLink>\n          </p>\n        )}\n      </Container>\n      <Footer />\n    </div>\n  );\n};\n\nexport default OnboardingErrorProctoredExamInstructions;\n"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAA8B;AAAA;AAAA;AAE9B,IAAMA,wCAAwC,GAAG,SAA3CA,wCAAwC,GAAS;EACrD,IAAMC,KAAK,GAAG,IAAAC,iBAAU,EAACC,mBAAgB,CAAC;EAC1C,IAAQC,IAAI,GAAyBH,KAAK,CAAlCG,IAAI;IAAEC,kBAAkB,GAAKJ,KAAK,CAA5BI,kBAAkB;EAChC,IAAQC,OAAO,GAAsCF,IAAI,CAAjDE,OAAO;IAAmBC,cAAc,GAAKH,IAAI,CAAxCI,eAAe;EAChC,IAC8BC,wBAAwB,GAElDJ,kBAAkB,CAFpBK,0BAA0B;IACXC,YAAY,GACzBN,kBAAkB,CADpBO,aAAa;EAGf,IAAMC,UAAU,GAAG,SAAbA,UAAU,GAAS;IACvB,QAAQP,OAAO,CAACQ,cAAc;MAC5B,KAAKC,qBAAU,CAACC,kBAAkB;MAClC,KAAKD,qBAAU,CAACE,kBAAkB;QAChC,oBACE,+EACE;UAAG,eAAY;QAAoB,gBACjC,gCAAC,sBAAgB;UACf,EAAE,EAAC,2DAA2D;UAC9D,cAAc,EAAC;QAAiE,EAChF,CACA,EACHV,cAAc,iBACb,gCAAC,kBAAS;UAAC,IAAI,EAAEA;QAAe,gBAC9B,gCAAC,sBAAgB;UACf,EAAE,EAAC,oEAAoE;UACvE,cAAc,EAAC;QAA6B,EAC5C,CAEL,CACA;MAEP,KAAKQ,qBAAU,CAACG,kBAAkB;QAChC,oBACE;UAAG,eAAY;QAAoB,gBACjC,gCAAC,sBAAgB;UACf,EAAE,EAAC,2DAA2D;UAC9D,cAAc,EAAE,sEAAsE,GACpF;QAA0E,EAC5E,CACA;MAER,KAAKH,qBAAU,CAACI,iBAAiB;QAC/B,oBACE,+EACE;UAAG,eAAY;QAAmB,gBAChC,gCAAC,sBAAgB;UACf,EAAE,EAAC,0DAA0D;UAC7D,cAAc,EAAC;QAAuD,EACtE,CACA,EACHZ,cAAc,iBACb,gCAAC,kBAAS;UAAC,IAAI,EAAEA;QAAe,gBAC9B,gCAAC,sBAAgB;UACf,EAAE,EAAC,oEAAoE;UACvE,cAAc,EAAC;QAA6B,EAC5C,CAEL,CACA;MAEP;QACE,OAAO,IAAI;IAAC;EAElB,CAAC;EAED,oBACE,0DACE,gCAAC,kBAAS;IAAC,SAAS,EAAC;EAAkB,gBACrC;IAAK,SAAS,EAAC;EAAI,gBACjB,gCAAC,sBAAgB;IACf,EAAE,EAAC,qDAAqD;IACxD,cAAc,EAAC;EAAwE,EACvF,CACE,EACLM,UAAU,EAAE,EACZJ,wBAAwB,iBACvB;IAAG,SAAS,EAAC;EAAM,gBACjB,gCAAC,sBAAgB;IACf,EAAE,EAAC,4DAA4D;IAC/D,cAAc,EAAE,2DAA2D,GACzE,0EAA2E;IAC7E,MAAM,EAAE;MAAEE,YAAY,EAAZA;IAAa;EAAE,EACzB,eACF,gCAAC,mBAAU;IAAC,EAAE,EAAEF;EAAyB,GACtCA,wBAAwB,CACd,CAEhB,CACS,eACZ,gCAAC,kBAAM,OAAG,CACN;AAEV,CAAC;AAAC,eAEaT,wCAAwC;AAAA"}