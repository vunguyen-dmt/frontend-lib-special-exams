{"version":3,"file":"StartTimedExamInstructions.js","names":["StartTimedExamInstructions","state","useContext","ExamStateContext","exam","startTimedExam","examDuration","transTime","total_time","Info"],"sources":["../../../src/instructions/timed_exam/StartTimedExamInstructions.jsx"],"sourcesContent":["import React, { useContext } from 'react';\nimport { FormattedMessage } from '@edx/frontend-platform/i18n';\nimport { Button, Alert } from '@edx/paragon';\nimport { Info } from '@edx/paragon/icons';\nimport ExamStateContext from '../../context';\nimport { transTime } from '../transTime';\n\nconst StartTimedExamInstructions = () => {\n  const state = useContext(ExamStateContext);\n  const { exam, startTimedExam } = state;\n  const examDuration = transTime(exam.total_time);\n\n  return (\n    <>\n      <div className=\"h3\" data-testid=\"exam-instructions-title\">\n        <FormattedMessage\n          id=\"exam.startExamInstructions.title\"\n          defaultMessage=\"Subsection is a Timed Exam ({examDuration})\"\n          values={{ examDuration }}\n        />\n      </div>\n      <p>\n        <FormattedMessage\n          id=\"exam.startExamInstructions.text1\"\n          defaultMessage=\"This exam has a time limit associated with it. \"\n        />\n        <strong>\n          <FormattedMessage\n            id=\"exam.startExamInstructions.text2\"\n            defaultMessage=\"To pass this exam, you must complete the problems in the time allowed. \"\n          />\n        </strong>\n        <FormattedMessage\n          id=\"exam.startExamInstructions.text3\"\n          defaultMessage={'After you select \"I am ready to start this timed exam\", '\n          + 'you will have {examDuration} to complete and submit the exam.'}\n          values={{ examDuration }}\n        />\n      </p>\n      <Alert variant=\"danger\" dismissible={false} icon={Info}>\n        <Alert.Heading>\n          <FormattedMessage\n              id=\"exam.startExamInstructions.attention\"\n              defaultMessage=\"Attention!\"\n            />\n          </Alert.Heading>\n        <p>\n        <FormattedMessage\n              id=\"exam.startExamInstructions.text4\"\n              defaultMessage=\"You must click the 'Submit' button for each question or group of questions to be scored. Clicking the Save button does NOT count as having submitted an answer.\"\n            />\n        </p>\n      </Alert>\n      <Button\n        data-testid=\"start-exam-button\"\n        variant=\"outline-primary\"\n        onClick={startTimedExam}\n      >\n        <FormattedMessage\n          id=\"exam.startExamInstructions.startExamButtonText\"\n          defaultMessage=\"I am ready to start this timed exam.\"\n        />\n      </Button>\n    </>\n  );\n};\n\nexport default StartTimedExamInstructions;\n"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAAyC;AAAA;AAAA;AAEzC,IAAMA,0BAA0B,GAAG,SAA7BA,0BAA0B,GAAS;EACvC,IAAMC,KAAK,GAAG,IAAAC,iBAAU,EAACC,mBAAgB,CAAC;EAC1C,IAAQC,IAAI,GAAqBH,KAAK,CAA9BG,IAAI;IAAEC,cAAc,GAAKJ,KAAK,CAAxBI,cAAc;EAC5B,IAAMC,YAAY,GAAG,IAAAC,oBAAS,EAACH,IAAI,CAACI,UAAU,CAAC;EAE/C,oBACE,+EACE;IAAK,SAAS,EAAC,IAAI;IAAC,eAAY;EAAyB,gBACvD,gCAAC,sBAAgB;IACf,EAAE,EAAC,kCAAkC;IACrC,cAAc,EAAC,6CAA6C;IAC5D,MAAM,EAAE;MAAEF,YAAY,EAAZA;IAAa;EAAE,EACzB,CACE,eACN,wDACE,gCAAC,sBAAgB;IACf,EAAE,EAAC,kCAAkC;IACrC,cAAc,EAAC;EAAiD,EAChE,eACF,6DACE,gCAAC,sBAAgB;IACf,EAAE,EAAC,kCAAkC;IACrC,cAAc,EAAC;EAAyE,EACxF,CACK,eACT,gCAAC,sBAAgB;IACf,EAAE,EAAC,kCAAkC;IACrC,cAAc,EAAE,0DAA0D,GACxE,+DAAgE;IAClE,MAAM,EAAE;MAAEA,YAAY,EAAZA;IAAa;EAAE,EACzB,CACA,eACJ,gCAAC,cAAK;IAAC,OAAO,EAAC,QAAQ;IAAC,WAAW,EAAE,KAAM;IAAC,IAAI,EAAEG;EAAK,gBACrD,gCAAC,cAAK,CAAC,OAAO,qBACZ,gCAAC,sBAAgB;IACb,EAAE,EAAC,sCAAsC;IACzC,cAAc,EAAC;EAAY,EAC3B,CACY,eAClB,wDACA,gCAAC,sBAAgB;IACX,EAAE,EAAC,kCAAkC;IACrC,cAAc,EAAC;EAAiK,EAChL,CACF,CACE,eACR,gCAAC,eAAM;IACL,eAAY,mBAAmB;IAC/B,OAAO,EAAC,iBAAiB;IACzB,OAAO,EAAEJ;EAAe,gBAExB,gCAAC,sBAAgB;IACf,EAAE,EAAC,gDAAgD;IACnD,cAAc,EAAC;EAAsC,EACrD,CACK,CACR;AAEP,CAAC;AAAC,eAEaL,0BAA0B;AAAA"}