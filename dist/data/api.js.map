{"version":3,"file":"api.js","names":["BASE_API_URL","fetchActiveAttempt","activeAttemptUrl","URL","getConfig","EXAMS_BASE_URL","getAuthenticatedHttpClient","get","href","activeAttemptResponse","data","fetchExamAttemptsData","courseId","sequenceId","url","LMS_BASE_URL","searchParams","append","urlResponse","examUrl","examResponse","exam","total_time","Number","isInteger","generateHumanizedTime","attemptData","active_attempt","fetchLatestAttempt","pollExamAttempt","edxProctoringURL","attempt_status","status","createExamAttempt","examId","legacyAttempt","startClock","attemptProctored","urlString","payload","exam_id","start_clock","toString","attempt_proctored","post","updateAttemptStatus","attemptId","action","detail","put","stopAttempt","ExamAction","STOP","continueAttempt","START","submitAttempt","SUBMIT","resetAttempt","RESET","endExamWithFailure","error","ERROR","softwareDownloadAttempt","CLICK_DOWNLOAD_SOFTWARE","declineAttempt","DECLINE","fetchExamReviewPolicy","fetchProctoringSettings","fetchExamAccessToken"],"sources":["../../src/data/api.js"],"sourcesContent":["import { getConfig } from '@edx/frontend-platform';\nimport { getAuthenticatedHttpClient } from '@edx/frontend-platform/auth';\nimport { ExamAction } from '../constants';\nimport { generateHumanizedTime } from '../helpers';\n\nconst BASE_API_URL = '/api/edx_proctoring/v1/proctored_exam/attempt';\n\nasync function fetchActiveAttempt() {\n  const activeAttemptUrl = new URL(`${getConfig().EXAMS_BASE_URL}/api/v1/exams/attempt/latest`);\n  const activeAttemptResponse = await getAuthenticatedHttpClient().get(activeAttemptUrl.href);\n  return activeAttemptResponse.data;\n}\n\nexport async function fetchExamAttemptsData(courseId, sequenceId) {\n  let data;\n  if (!getConfig().EXAMS_BASE_URL) {\n    const url = new URL(\n      `${getConfig().LMS_BASE_URL}${BASE_API_URL}/course_id/${courseId}`,\n    );\n    url.searchParams.append('content_id', sequenceId);\n    url.searchParams.append('is_learning_mfe', true);\n    const urlResponse = await getAuthenticatedHttpClient().get(url.href);\n    data = urlResponse.data;\n  } else {\n    const examUrl = new URL(`${getConfig().EXAMS_BASE_URL}/api/v1/student/exam/attempt/course_id/${courseId}/content_id/${sequenceId}`);\n    const examResponse = await getAuthenticatedHttpClient().get(examUrl.href);\n    data = examResponse.data;\n\n    // humanize total time if response is from edx-exams\n    data.exam.total_time = Number.isInteger(data.exam.total_time)\n      ? generateHumanizedTime(data.exam.total_time * 60)\n      : data.exam.total_time;\n\n    const attemptData = await fetchActiveAttempt();\n    data.active_attempt = attemptData;\n  }\n  return data;\n}\n\nexport async function fetchLatestAttempt(courseId) {\n  let data;\n  if (!getConfig().EXAMS_BASE_URL) {\n    const url = new URL(\n      `${getConfig().LMS_BASE_URL}${BASE_API_URL}/course_id/${courseId}`,\n    );\n    url.searchParams.append('is_learning_mfe', true);\n    const urlResponse = await getAuthenticatedHttpClient().get(url.href);\n    data = urlResponse.data;\n  } else {\n    // initialize data dictionary to be similar to what edx-proctoring returns\n    data = { exam: {} };\n\n    const attemptData = await fetchActiveAttempt();\n    data.active_attempt = attemptData;\n  }\n  return data;\n}\n\nexport async function pollExamAttempt(url) {\n  let data;\n  if (!getConfig().EXAMS_BASE_URL) {\n    const edxProctoringURL = new URL(\n      `${getConfig().LMS_BASE_URL}${url}`,\n    );\n    const urlResponse = await getAuthenticatedHttpClient().get(edxProctoringURL.href);\n    data = urlResponse.data;\n  } else {\n    data = await fetchActiveAttempt();\n\n    // Update dictionaries returned by edx-exams to have correct status key for legacy compatibility\n    if (data.attempt_status) {\n      data.status = data.attempt_status;\n      delete data.attempt_status;\n    }\n  }\n  return data;\n}\n\nexport async function createExamAttempt(examId, legacyAttempt, startClock = true, attemptProctored = false) {\n  let urlString;\n  if (!getConfig().EXAMS_BASE_URL || legacyAttempt) {\n    urlString = `${getConfig().LMS_BASE_URL}${BASE_API_URL}`;\n  } else {\n    urlString = `${getConfig().EXAMS_BASE_URL}/api/v1/exams/attempt`;\n  }\n  const url = new URL(urlString);\n  const payload = {\n    exam_id: examId,\n    start_clock: startClock.toString(),\n    attempt_proctored: attemptProctored.toString(),\n  };\n  const { data } = await getAuthenticatedHttpClient().post(url.href, payload);\n  return data;\n}\n\nexport async function updateAttemptStatus(attemptId, action, legacyAttempt, detail = null) {\n  let urlString;\n  if (!getConfig().EXAMS_BASE_URL || legacyAttempt) {\n    urlString = `${getConfig().LMS_BASE_URL}${BASE_API_URL}/${attemptId}`;\n  } else {\n    urlString = `${getConfig().EXAMS_BASE_URL}/api/v1/exams/attempt/${attemptId}`;\n  }\n  const url = new URL(urlString);\n  const payload = { action };\n  if (detail) {\n    payload.detail = detail;\n  }\n  const { data } = await getAuthenticatedHttpClient().put(url.href, payload);\n  return data;\n}\n\nexport async function stopAttempt(attemptId, legacyAttempt = false) {\n  return updateAttemptStatus(attemptId, ExamAction.STOP, legacyAttempt);\n}\n\nexport async function continueAttempt(attemptId, legacyAttempt = false) {\n  return updateAttemptStatus(attemptId, ExamAction.START, legacyAttempt);\n}\n\nexport async function submitAttempt(attemptId, legacyAttempt = false) {\n  return updateAttemptStatus(attemptId, ExamAction.SUBMIT, legacyAttempt);\n}\n\nexport async function resetAttempt(attemptId, legacyAttempt = false) {\n  return updateAttemptStatus(attemptId, ExamAction.RESET, legacyAttempt);\n}\n\nexport async function endExamWithFailure(attemptId, error, legacyAttempt = false) {\n  return updateAttemptStatus(attemptId, ExamAction.ERROR, legacyAttempt, error);\n}\n\nexport async function softwareDownloadAttempt(attemptId, legacyAttempt = false) {\n  return updateAttemptStatus(attemptId, ExamAction.CLICK_DOWNLOAD_SOFTWARE, legacyAttempt);\n}\n\nexport async function declineAttempt(attemptId, legacyAttempt = false) {\n  return updateAttemptStatus(attemptId, ExamAction.DECLINE, legacyAttempt);\n}\n\nexport async function fetchExamReviewPolicy(examId) {\n  const url = new URL(\n    `${getConfig().LMS_BASE_URL}/api/edx_proctoring/v1/proctored_exam/review_policy/exam_id/${examId}/`,\n  );\n  const { data } = await getAuthenticatedHttpClient().get(url.href);\n  return data;\n}\n\nexport async function fetchProctoringSettings(courseId, examId) {\n  let url;\n  if (!getConfig().EXAMS_BASE_URL) {\n    url = new URL(`${getConfig().LMS_BASE_URL}/api/edx_proctoring/v1/proctored_exam/settings/exam_id/${examId}/`);\n  } else {\n    url = new URL(`${getConfig().EXAMS_BASE_URL}/api/v1/exam/provider_settings/course_id/${courseId}/exam_id/${examId}`);\n  }\n  const { data } = await getAuthenticatedHttpClient().get(url.href);\n  return data;\n}\n\nexport async function fetchExamAccessToken(examId) {\n  const url = new URL(\n    `${getConfig().EXAMS_BASE_URL}/api/v1/access_tokens/exam_id/${examId}/`,\n  );\n  const { data } = await getAuthenticatedHttpClient().get(url.href);\n  return data;\n}\n"],"mappings":"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"}